"use strict";(self.webpackChunknomadd=self.webpackChunknomadd||[]).push([[7635],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),s=p(r),d=a,f=s["".concat(l,".").concat(d)]||s[d]||u[d]||i;return r?n.createElement(f,o(o({ref:t},m),{},{components:r})):n.createElement(f,o({ref:t},m))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[s]="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9721:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={id:"chief-application-interface",title:"Chief Application Interface"},o="Software Requrements",c={unversionedId:"system-requirements/chief-application-interface/chief-application-interface",id:"system-requirements/chief-application-interface/chief-application-interface",title:"Chief Application Interface",description:"| Software Requirement ID | System Requirement ID    | Requirement Title                      | Requirement Description                                                                                                                                                                           |",source:"@site/docs/system-requirements/chief-application-interface/index.md",sourceDirName:"system-requirements/chief-application-interface",slug:"/system-requirements/chief-application-interface/",permalink:"/nomadd-documentation-beta/docs/system-requirements/chief-application-interface/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/system-requirements/chief-application-interface/index.md",tags:[],version:"current",frontMatter:{id:"chief-application-interface",title:"Chief Application Interface"},sidebar:"tutorialSidebar",previous:{title:"System Requirements",permalink:"/nomadd-documentation-beta/docs/system-requirements/"},next:{title:"Chief User Interface",permalink:"/nomadd-documentation-beta/docs/system-requirements/chief-user-interface"}},l={},p=[],m={toc:p},s="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(s,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"software-requrements"},"Software Requrements"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Software Requirement ID"),(0,a.kt)("th",{parentName:"tr",align:null},"System Requirement ID"),(0,a.kt)("th",{parentName:"tr",align:null},"Requirement Title"),(0,a.kt)("th",{parentName:"tr",align:null},"Requirement Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"req_chf_api_1_v1"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"./req_chf_api_1_v1"},"View Details")),(0,a.kt)("td",{parentName:"tr",align:null},"Send command to device"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"POST /nomadd/<command>"),' The system should allow send command to Nomadd(s) listed in the body of the request in the "Nomadds" array embedded in a JSON Object.. ',(0,a.kt)("inlineCode",{parentName:"td"},"{Nomadds:[0001,0002,0003]}"))))))}u.isMDXComponent=!0}}]);